// <auto-generated />
using System;
using CARWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CARWeb.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CARWeb.Shared.Models.Auth.AuditTrail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.Auth.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RefreshTokenExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.Auth.UserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.Auth.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.CARHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CARNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CARTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Clauses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssuanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NonRecurring")
                        .HasColumnType("bit");

                    b.Property<bool>("Recurring")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RevisionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RevisionNo")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SysRefNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfAccident")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfFinding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CARTypeId");

                    b.ToTable("CARHeaders");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.DetailsOfIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CARHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("DetailsOfIssueDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailsOfIssueFiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvidenceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvidenceFiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequirementsDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequirementsFiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CARHeaderId")
                        .IsUnique();

                    b.ToTable("DetailsOfIssues");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.EliminationNonConformity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnalyzedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AnalyzedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CARHeaderId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFaultTree")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFishBone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOthers")
                        .HasColumnType("bit");

                    b.Property<string>("IsOthersDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSimilarSituation")
                        .HasColumnType("bit");

                    b.Property<string>("IsSimilarSituationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsSimilarSituationFiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsWhyWhy")
                        .HasColumnType("bit");

                    b.Property<string>("MethodFiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReviewedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RootCaseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkerRepresentative")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CARHeaderId")
                        .IsUnique();

                    b.HasIndex("DepartmentId");

                    b.ToTable("EliminationNonConformities");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.ImmediateCorrection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionsToCorrectDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionsToCorrectFiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionsToDealDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionsToDealFiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CARHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CARHeaderId")
                        .IsUnique();

                    b.ToTable("ImmediateCorrections");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.NonConformityItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CARHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("NonConformityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CARHeaderId");

                    b.HasIndex("NonConformityId");

                    b.ToTable("NonConformityItems");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.StandardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CARHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("StandardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CARHeaderId");

                    b.HasIndex("StandardId");

                    b.ToTable("StandardItems");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CARLabel.CARType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CARTypes");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CARLabel.NonConformity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CARTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoSeries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CARTypeId");

                    b.ToTable("NonConformities");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CARLabel.Standard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Standards");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.DepartmentSection.DSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("DSections");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.DepartmentSection.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.Auth.AuditTrail", b =>
                {
                    b.HasOne("CARWeb.Shared.Models.Auth.User", "User")
                        .WithMany("AuditTrails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.Auth.UserDetails", b =>
                {
                    b.HasOne("CARWeb.Shared.Models.Auth.User", "User")
                        .WithOne("UserDetails")
                        .HasForeignKey("CARWeb.Shared.Models.Auth.UserDetails", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.CARHeader", b =>
                {
                    b.HasOne("CARWeb.Shared.Models.CARLabel.CARType", "CARType")
                        .WithMany("CARHeaders")
                        .HasForeignKey("CARTypeId");

                    b.Navigation("CARType");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.DetailsOfIssue", b =>
                {
                    b.HasOne("CARWeb.Shared.Models.CAREntry.CARHeader", "CARHeader")
                        .WithOne("DetailsOfIssue")
                        .HasForeignKey("CARWeb.Shared.Models.CAREntry.DetailsOfIssue", "CARHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CARHeader");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.EliminationNonConformity", b =>
                {
                    b.HasOne("CARWeb.Shared.Models.CAREntry.CARHeader", "CARHeader")
                        .WithOne("EliminationNonConformity")
                        .HasForeignKey("CARWeb.Shared.Models.CAREntry.EliminationNonConformity", "CARHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CARWeb.Shared.Models.DepartmentSection.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("CARHeader");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.ImmediateCorrection", b =>
                {
                    b.HasOne("CARWeb.Shared.Models.CAREntry.CARHeader", "CARHeader")
                        .WithOne("ImmediateCorrection")
                        .HasForeignKey("CARWeb.Shared.Models.CAREntry.ImmediateCorrection", "CARHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CARHeader");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.NonConformityItem", b =>
                {
                    b.HasOne("CARWeb.Shared.Models.CAREntry.CARHeader", "CARHeader")
                        .WithMany("NonConformityItems")
                        .HasForeignKey("CARHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CARWeb.Shared.Models.CARLabel.NonConformity", "NonConformity")
                        .WithMany("NonConformityItems")
                        .HasForeignKey("NonConformityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CARHeader");

                    b.Navigation("NonConformity");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.StandardItem", b =>
                {
                    b.HasOne("CARWeb.Shared.Models.CAREntry.CARHeader", "CARHeader")
                        .WithMany("StandardItems")
                        .HasForeignKey("CARHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CARWeb.Shared.Models.CARLabel.Standard", "Standard")
                        .WithMany("StandardItems")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CARHeader");

                    b.Navigation("Standard");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CARLabel.NonConformity", b =>
                {
                    b.HasOne("CARWeb.Shared.Models.CARLabel.CARType", "CARType")
                        .WithMany("NonConformities")
                        .HasForeignKey("CARTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CARType");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.DepartmentSection.DSection", b =>
                {
                    b.HasOne("CARWeb.Shared.Models.DepartmentSection.Department", "Department")
                        .WithMany("Sections")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.Auth.User", b =>
                {
                    b.Navigation("AuditTrails");

                    b.Navigation("UserDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CAREntry.CARHeader", b =>
                {
                    b.Navigation("DetailsOfIssue")
                        .IsRequired();

                    b.Navigation("EliminationNonConformity")
                        .IsRequired();

                    b.Navigation("ImmediateCorrection")
                        .IsRequired();

                    b.Navigation("NonConformityItems");

                    b.Navigation("StandardItems");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CARLabel.CARType", b =>
                {
                    b.Navigation("CARHeaders");

                    b.Navigation("NonConformities");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CARLabel.NonConformity", b =>
                {
                    b.Navigation("NonConformityItems");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.CARLabel.Standard", b =>
                {
                    b.Navigation("StandardItems");
                });

            modelBuilder.Entity("CARWeb.Shared.Models.DepartmentSection.Department", b =>
                {
                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
