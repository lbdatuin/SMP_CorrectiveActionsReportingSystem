@using System.Security.Claims
@inject AuthenticationStateProvider AuthStateProvider
@inject IClientUserManagementService ClientUserManagementService
@inject IDialogService DialogService

<MudNavMenu Rounded="true" Margin="Margin.Normal" Color="Color.Dark" Class="pl-5 pr-5 side-bar">

    <div class="user-box d-flex align-items-center">
        <div>
            <img src="images/sys/logo.png" />
        </div>
        <div class="d-flex flex-column justify-content-center w-100">
            <div class="d-flex align-items-center justify-content-center username-cont">
                <i class="fi fi-rr-circle-user"></i>
                <h4>@username</h4>
            </div>
            <button class="roles-btn" @onclick="OpenRoles">
                ACCESS ROLES
                <i class="fa-solid fa-chevron-down"></i>
            </button>
            @if (IsOpenRole){
                <div class="roles-cont">
                    @foreach (var role in AccessRoleResponseData)
                    {
                        <span>• @role</span>
                    }
                </div>
            }
        </div>
    </div>
    <div class="side-label">General</div>
    <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="fi fi-rr-dashboard">Dashboard</MudNavLink>

    <div class="side-label">Data Entry</div>
    <MudNavGroup Title="Creation Of CAR" Icon="fi fi-rr-poll-h">
        <MudNavLink Href="/create-car-form">Add Entry</MudNavLink>
        <MudNavLink Href="/corrective-action">Record Table</MudNavLink>
    </MudNavGroup>

    <div class="side-label">Settings</div>
    <MudNavGroup Title="Maintenance" Icon="fi fi-rr-settings">
        <MudNavLink Href="/users">Users</MudNavLink>
        <MudNavLink Href="/emailing-control">Emailing Control</MudNavLink>
        <MudNavLink Href="/departments">Department/Section</MudNavLink>
        <MudNavLink Href="/roles">Access Role </MudNavLink>
        <MudNavLink Href="/standard">Standard</MudNavLink>
        <MudNavLink Href="/car-type">CAR Type</MudNavLink>
        <MudNavLink Href="/non-conformity">Non-Conformity</MudNavLink>
        <MudNavLink Href="/audit-trail">Audit Trail</MudNavLink>
    </MudNavGroup>

</MudNavMenu>

@code {

    private string? UserId = string.Empty;
    private string? username = string.Empty;
    private bool IsOpenRole = false;
    public List<string> AccessRoleResponseData = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState token_auth_state = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = token_auth_state.User;
        username = user.Claims.FirstOrDefault(claim => claim.Type == ClaimTypes.UserData)?.Value;
        UserId = user.Claims.FirstOrDefault(claim => claim.Type == ClaimTypes.NameIdentifier)?.Value;

        if (!string.IsNullOrEmpty(UserId))
        {
            AccessRoleResponseData = await ClientUserManagementService.GetRoleNameListById(Guid.Parse(UserId));
        }
    }

    private void OpenRoles(){
        IsOpenRole = !IsOpenRole;
    }
}
