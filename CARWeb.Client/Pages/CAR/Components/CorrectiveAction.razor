<div class="details">
    <div class="details-header">4. CORRECTIVE ACTION</div>
    <div class="details-header-2">4.1 DEPARTMENT COMMITMENT</div>
    <div class="note-title">Note: Finalize corrective actions with the reviewer within 7 days from date of issuance.</div>

    <div class="tbl-cont">
        <table>
            <thead>
                <tr>
                    <th>Corrective Actions</th>
                    <th>Responsible Person/Dept</th>
                    <th>Target Completion Date</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Payload.CorrectiveAction.CorrectiveActionItems)
                {
                    var index = Payload.CorrectiveAction.CorrectiveActionItems.IndexOf(item);
                    <tr>
                        <td><input type="text" @bind="item.CAction"/></td>
                        <td><input type="text" @bind="item.Responsible" /></td>
                        <td><input type="date" @bind="item.CompletionDate"/></td>
                        <td class="text-center">
                            <button type="button" class="remove-row" @onclick="@(() => RemoveRow(index))">Remove</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <button class="add-row" type="button" @onclick="AddRow">Add Row</button>
    </div>

    <div class="mt-3 detail-3-cont" style="border-top: 1px solid #ccc;">
        <div>
            <div class="input-cont">
                <label class="d-flex">Person Responsible :</label>
                <input type="text" @bind="Payload.CorrectiveAction.PersonResponsible">
            </div>
            <div class="input-cont">
                <label class="d-flex" style="width: 170px;">Department Head :</label>
                <input type="text" @bind="Payload.CorrectiveAction.DepartmentHead" disabled>
            </div>
        </div>
        <div>
            <div class="input-cont">
                <label class="d-flex">Reviewed By :</label>
                <input type="text" @bind="Payload.CorrectiveAction.ReviewedBy" placeholder="-" disabled>
            </div>
            <div class="input-cont">
                <label class="d-flex">Designation :</label>
                <input type="text" @bind="Payload.CorrectiveAction.ReviewerDesignation" placeholder="-" disabled>
            </div>
            <div class="input-cont">
                <label class="d-flex">Date :</label>
                <input type="date" @bind="Payload.CorrectiveAction.ReviewedDate">
            </div>
        </div>
    </div>

    <div class="details-header-2">4.2 REVIEW OF CONFORMITY TO RELEVANT DOCUMENTED INFORMATION MAINTAINED & RETAINED</div>

    <div>
        <div class="details-header-1">4.2.1 INTERNAL COMMUNICATION: ADDRESS THE ENCOUNTERED ISSUES WITHIN THE DEPARTMENT, INCLUDING THE WORKER'S</div>
        <div class="details-header-1" style="margin-left: 30px; margin-top: 0px;">(ATTACH ATTENDANCE SHEET AND/OR MEETING MINUTES OR ANY OTHER DOCUMENTATION OF COMMUNICATION/DISCUSSION)</div>
        <div style="padding: 13px 25px;" class="main-input-cont">
            <ListFileUpload title="UPLOAD FILE" isActive="true" OnFilesSelected="f => InternalCommunicationFiles = f.ToList()" />
        </div>
    </div>
    <div>
        <div class="details-header-1 d-flex align-items-center">4.2.2
            <div class="ml-2" style="color: #00cd63;">MANAGEMENT OF CHANGE: WERE THERE ANY CHANGES IN THE PROCESS, EQUIPMENT, ETC.?</div>
            <div class="d-flex">
                <MudRadioGroup T="bool" @bind-SelectedOption="Payload.CorrectiveAction.IsManagementOfChange" class="d-flex flex-row ml-3">
                    <MudRadio Option="true" Color="Color.Dark">YES</MudRadio>
                    <MudRadio Option="false" Color="Color.Dark">NO</MudRadio>
                </MudRadioGroup>
            </div>
        </div>

        <div class="details-header-1" style="margin-left: 30px; margin-top: 0px;">IF YES, PLEASE ATTACHED REVIEWED OR CONDUCTED RISK ASSESSMENT, PROCEDURE/PROCESS FLOW/WORK INSTRUCTION</div>
        <div style="padding: 13px 25px;" class="main-input-cont">
            <ListFileUpload title="UPLOAD FILE" isActive="true" OnFilesSelected="f => ManagementOfChangeFiles = f.ToList()" />
        </div>
    </div>

</div>

@code {
    [Parameter] public CreateCARHeaderDTO Payload { get; set; } = new CreateCARHeaderDTO();

    private List<IBrowserFile> InternalCommunicationFiles = new();
    private List<IBrowserFile> ManagementOfChangeFiles = new();

    public List<IBrowserFile> GetInternalCommunicationFiles() => InternalCommunicationFiles;
    public List<IBrowserFile> GetManagementOfChangeFiles() => ManagementOfChangeFiles;

    protected override void OnInitialized()
    {
        if (Payload.CorrectiveAction.CorrectiveActionItems == null)
            Payload.CorrectiveAction.CorrectiveActionItems = new();

        while (Payload.CorrectiveAction.CorrectiveActionItems.Count < 5)
        {
            Payload.CorrectiveAction.CorrectiveActionItems.Add(new CreateCorrectiveActionItem());
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        Payload.CorrectiveAction.DepartmentHead = Payload.EliminationNonConformity.ApprovedBy;
        Payload.CorrectiveAction.ReviewedBy = Payload.EliminationNonConformity.ReviewedBy;
        Payload.CorrectiveAction.ReviewerDesignation = Payload.EliminationNonConformity.Designation;
    }

    private void AddRow()
    {
        Payload.CorrectiveAction.CorrectiveActionItems.Add(new CreateCorrectiveActionItem());
    }

    private void RemoveRow(int index)
    {
        if (index >= 0 && index < Payload.CorrectiveAction.CorrectiveActionItems.Count)
        {
            Payload.CorrectiveAction.CorrectiveActionItems.RemoveAt(index);
        }
    }

}
