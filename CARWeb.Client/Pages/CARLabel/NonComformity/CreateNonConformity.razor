@inject IClientCARLabelService ClientCARLabelService
<InputDesign />

<MudDialog>
    <DialogContent>

        <div class="px-sm-2 mt-n4 px-1 pb-4 form-div">

            @if (Id == null)
            {
                <DialogHeader title="NEW NON CONFORMITY" icon="@Icons.Material.Filled.Add" />
            }
            else
            {
                <DialogHeader title="EDIT NON CONFORMITY" icon="@Icons.Material.Filled.Edit" />
            }

            <div class="mt-3">
                <form @onsubmit="HandleSubmit">
                    <div class="main-input-cont">
                        <label class="d-flex">Code <label class="ml-1" style="color: #FF4F53;">*</label></label>
                        <input type="text" @bind="Payload.Code" placeholder="-">
                    </div>
                    <div class="main-input-cont">
                        <label class="d-flex">CAR Type <label class="ml-1" style="color: #FF4F53;">*</label></label>
                        <select @bind="Payload.CARTypeId">
                            <option value="0" disabled>-Select Type-</option>
                            @foreach (var type in CarTypeList)
                            {
                                <option value="@type.Id">@type.Code</option>
                            }
                        </select>
                    </div>
                    <div class="main-input-cont">
                        <label class="d-flex mb-3">Description</label>
                        <textarea rows="9" @bind="Payload.Desciption" placeholder="e.g. a sample value or a short description"></textarea>
                    </div>

                    <div class="d-flex justify-content-end">
                        @if (Id == null)
                        {
                            <SubmitButton isLoading="isLoading" button_name="SUBMIT" className="submit-btn" />
                        }
                        else
                        {
                            <SubmitButton isLoading="isLoading" button_name="EDIT" className="edit-btn" />
                        }
                    </div>
                </form>
            </div>

        </div>
    </DialogContent>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = new MudDialogInstance();

    [Parameter] public int? Id { get; set; }

    [Parameter] public GetNonConformityDTO? ResponseData { get; set; } = new GetNonConformityDTO();

    [Parameter] public CreateNonConformityDTO? Payload { get; set; } = new CreateNonConformityDTO();

    private List<GetCarTypeListDTO> CarTypeList = new List<GetCarTypeListDTO>();

    public bool isLoading = false;

    void Cancel() => MudDialog.Cancel();

    protected override async Task OnInitializedAsync()
    {
        CarTypeList = await ClientCARLabelService.GetCarTypeList();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            Payload.Code = ResponseData.Code;
            Payload.Desciption = ResponseData.Desciption;
            Payload.CARTypeId = ResponseData.CARTypeId;
        }
    }

    void HandleSubmit()
    {
        MudDialog.Close(DialogResult.Ok(Payload));
    }

}
